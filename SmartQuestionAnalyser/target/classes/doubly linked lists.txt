1. What are the key differences between singly linked lists and doubly linked lists?
2. How would you implement a doubly linked list from scratch?
3. Explain the time and space complexity advantages of a doubly linked list over a singly linked list.
4. How would you efficiently delete a node from a doubly linked list?
5. Describe an algorithm to reverse a doubly linked list.
6. How would you implement an LRU (Least Recently Used) cache using a doubly linked list?
7. What are the advantages of using a sentinel (dummy) node in a doubly linked list implementation?
8. How would you efficiently insert a node before a given node in a doubly linked list?
9. Describe how to check if a doubly linked list is a palindrome.
10. How would you efficiently merge two sorted doubly linked lists?