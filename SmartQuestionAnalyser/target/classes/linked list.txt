1. How would you implement a singly linked list from scratch?
2. What are the time complexities for insertion and deletion operations at different positions in a linked list?
3. Describe an algorithm to detect a cycle in a linked list.
4. How would you find the middle element of a linked list in one pass?
5. Explain the approach to reverse a linked list iteratively and recursively.
6. How would you implement a function to check if a linked list is a palindrome?
7. Describe an algorithm to merge two sorted linked lists into a single sorted linked list.
8. How would you detect the intersection point of two linked lists?
9. What is the efficient way to remove the nth node from the end of a linked list in one pass?
10. Explain how to swap nodes in a linked list without swapping data.